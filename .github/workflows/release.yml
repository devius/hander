name: Build and Release macOS App with DMG

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3

    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
        cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
        cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

    - name: Cache pub dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.PUB_CACHE }}
          ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: |
          macos/Pods
          ~/Library/Caches/CocoaPods
          ~/.cocoapods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Enable macOS
      run: flutter config --enable-macos-desktop

    - name: Precache Flutter artifacts
      run: flutter precache --macos

    - name: Install dependencies
      run: flutter pub get

    - name: Generate Flutter files
      run: cd macos && pod install && cd ..

    - name: Build macOS app
      run: flutter build macos --release
    
    - name: Install create-dmg
      run: brew install create-dmg
    
    - name: Get app name
      id: app_name
      run: |
        APP_NAME=$(ls build/macos/Build/Products/Release/ | grep ".app" | head -n 1)
        APP_NAME_NO_EXT="${APP_NAME%.app}"
        echo "app_name=${APP_NAME}" >> $GITHUB_OUTPUT
        echo "app_name_no_ext=${APP_NAME_NO_EXT}" >> $GITHUB_OUTPUT
    
    - name: Create DMG
      run: |
        create-dmg \
          --volname "${{ steps.app_name.outputs.app_name_no_ext }}" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --app-drop-link 600 185 \
          "${{ steps.app_name.outputs.app_name_no_ext }}.dmg" \
          "build/macos/Build/Products/Release/${{ steps.app_name.outputs.app_name }}" || true
    
    - name: Create ZIP as fallback
      run: |
        cd build/macos/Build/Products/Release
        zip -r ../../../../../${{ steps.app_name.outputs.app_name_no_ext }}.zip ${{ steps.app_name.outputs.app_name }}
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.app_name.outputs.app_name_no_ext }}.dmg
          ${{ steps.app_name.outputs.app_name_no_ext }}.zip
        body: |
          ## macOS App Release ${{ github.ref_name }}
          
          ### Installation
          - **DMG**: Download, open, and drag the app to Applications
          - **ZIP**: Download, extract, and run the app
          
          **Note:** On first run, you may need to:
          1. Right-click the app and select "Open"
          2. Or go to System Preferences > Privacy & Security and allow the app
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
